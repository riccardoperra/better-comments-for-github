/*
 * Copyright 2025 Riccardo Perra
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.wrapper {
  position: relative;
  box-sizing: border-box;
  display: inline-flex;
  max-height: 600px;
  min-height: 64px;
  max-width: 100%;
  min-width: 64px;
  align-items: center;
  justify-content: center;
  outline: transparent solid 2px;
  border-radius: var(--borderRadius-default);

  &[data-selected] {
    outline-color: var(--bgColor-accent-emphasis);
  }
}

.isError {
  outline-color: var(--bgColor-danger-emphasis);
  min-width: max-content;
  min-height: max-content;
}

.image {
  height: 100%;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  margin: 0;
  width: min-content;
  border-radius: var(--borderRadius-default);
}

.wrapper:is(:hover, [data-resizing], [data-selected]) {
  .resizableHandler {
    opacity: 1;
  }
}

.actions {
  display: flex;
  gap: var(--base-size-4);
  position: absolute;
  top: 0;
  right: 0;
  margin: var(--base-size-6);
  background: var(--bgColor-default);
  border-radius: var(--borderRadius-default);
  overflow: hidden;
}

.resizableHandler {
  position: absolute;
  background-color: var(--button-default-bgColor-rest);
  padding: 0;
  opacity: 0;
  transition-duration: 150ms;
  transition-timing-function: ease-in-out;
  transition-property: opacity, translate;
  top: 50%;
  transform: translateY(-50%);
  width: 14px;
  height: 14px;
  border-radius: 9999px;
  background: var(--bgColor-accent-emphasis);
  border: 2px solid white;
  isolation: isolate;
  cursor:
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32px" height="32px" viewBox="0 0 32 32" ><path d="M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z" stroke-linejoin="round" stroke-width="1.2" fill="black" stroke="white" style="transform:rotate(90deg);transform-origin: 16px 16px"></path></svg>')
      16 16,
    ew-resize;

  &[position='left'] {
    position: absolute;
    left: 0;
    transform: translateX(-50%);
    cursor: e-resize;
  }

  &[position='right'] {
    position: absolute;
    right: 0;
    transform: translateX(50%);
  }
}

.action {
  border-radius: var(--borderRadius-default);
  background-color: var(--button-invisible-bgColor-rest);
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--button-invisible-fgColor-rest);
  width: 28px;
  height: 28px;
  border: none;
  outline: none;
  cursor: initial;

  &:hover {
    background-color: var(--button-invisible-bgColor-hover);
    color: var(--button-invisible-fgColor-hover);
  }

  &:active {
    background-color: var(--button-invisible-bgColor-active);
  }

  &:disabled {
    background-color: var(--button-invisible-bgColor-disabled);
    color: var(--button-invisible-fgColor-disabled);
  }
}

.loader {
  position: absolute;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--base-size-4);
  border-radius: var(--borderRadius-large);
  padding: var(--base-size-8);
  font-size: var(--font-size-small);
  background: rgb(0 0 0 / 70%);
  color: var(--fgColor-white);
  width: 100%;
  height: 100%;

  > svg {
    width: 15%;
    height: 15%;
    animation: spin-animation 1s infinite;
  }
}

.altTextPopoverContent {
  display: flex;
  flex-direction: column;
  gap: var(--base-size-6);

  > input {
    min-width: 260px;
  }
}

@keyframes spin-animation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}

/*export const dragControlHandler = style({*/
/*  vars: {*/
/*[frameVars.controlOffset]: `calc(${frameVars.controlHandleSize} / 2 * -1)`,*/
/*},*/
/*selectors: {*/
/*[`${dragControls} &`]: {*/
/*  position: 'absolute',*/
/*  top: '50%',*/
/*  transform: 'translateY(-50%)',*/
/*  zIndex: 10,*/
/*  cursor: 'ew-resize',*/
/*  width: frameVars.controlHandleSize,*/
/*  height: frameVars.controlHandleSize,*/
/*},*/
/*'&:hover::after': {*/
/*  transform: 'translate(-50%, -50%) scale(2)',*/
/*},*/
/*},*/
/*'::after': {*/
/*  content: '',*/
/*  position: 'absolute',*/
/*  left: '50%',*/
/*  top: '50%',*/
/*  width: '8px',*/
/*  height: '8px',*/
/*  borderRadius: themeVars.borderRadius.lg,*/
/*  boxShadow: themeVars.boxShadow.lg,*/
/*  transform: 'translate(-50%, -50%)',*/
/*  backgroundColor: frameVars.controlHandleColor,*/
/*  transition: 'transform .1s ease',*/
/*},*/
/*});*/

.errorWrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: var(--base-size-4);
  background-image: linear-gradient(
    var(--bgColor-danger-muted),
    var(--bgColor-danger-muted)
  );
  border-color: var(--borderColor-danger-muted);
  color: var(--fgColor-default);
  padding-block: var(--base-size-12);
  padding-inline: var(--base-size-6);
  text-align: center;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  text-wrap: balance;
  user-select: none;

  > p {
    max-width: 340px;
  }
}
